@page "/"
@rendermode InteractiveServer
@inject HttpClient Http  
@inject NavigationManager NavigationManager 
@inject DeerDiary_Frontend.Auth.Token token
@using System.Net.Http.Headers



<header>
    <DeerDiary_Frontend.Components.Layout.NavMenu></DeerDiary_Frontend.Components.Layout.NavMenu>
</header>

<EditForm Model="@journalEntryModel" OnValidSubmit="SubmitJournalEntry" FormName="JournalForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <body>
        <div class="container-fluid p-4" style="background-color: #FFF0C7; color: black; height:auto;">
            <div class="row">
                <div class="col-md-2 rounded-3 p-0 d-flex flex-column" style="background-color: #C09173; padding: 30px;">
                    <button class="list-group-item" style="background-color: #97946B; color: white;">Button 1</button>
                    <button class="list-group-item" style="background-color: #97946B; color: white;">Create Page  <img src="/bootstrap/images/plus.png" style="overflow: hidden; height: 2vh; padding: 0;" /></button>
                </div>

                <div class="col-md-9" style="min-height: 80vh;">


                    <div class="form-group mb-4">
                        <label for="journalTitle" class="form-label">Eingabe Feld zum Titel der Journal eintrag zu schreiben</label>
                        <InputText id="journalTitle" @bind-Value="journalEntryModel.JournalTitle" class="form-control" placeholder="Titel hier eingeben" />
                    </div>

                    <div class="form-group mb-4" style="margin-bottom: 12px">
                        <label for="journalEntry" class="form-label">Eingabe Feld zum Journal Eintrag zu schreiben</label>
                        <InputTextArea id="journalEntry" @bind-Value="journalEntryModel.JournalText" class="form-control" rows="10" placeholder="Eintrag hier schreiben" style="height: 62vh;"></InputTextArea>
                    </div>

                    <div class="d-grid">
                        <button type="submit" class="list-group-item rounded" style="background-color: #97946B; color: white;">
                            Submit Entry <img src="/bootstrap/images/right-arrow.png" style="overflow: hidden; height: 2vh; padding: 0;" />
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </body>
</EditForm>
 
@code {
    private JournalEntry journalEntryModel = new JournalEntry();

    protected override async Task OnInitializedAsync()
    {
        if (token._Token is null)
        {
            NavigationManager.NavigateTo("/login");
        }
        else Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token._Token);
    }

    private async Task SubmitJournalEntry()
    {
        Console.WriteLine(journalEntryModel.JournalText);
        Console.WriteLine(journalEntryModel.JournalTitle);

        var response = await Http.PostAsJsonAsync("https://localhost:7050/Journal/PostJournalEntry", journalEntryModel);

        Console.WriteLine("Submitted: " + response.StatusCode);

        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/chat", true);
        }
        else
        {
            // Handle error (e.g., display an error message)
            var errorMessage = response.StatusCode;
            Console.WriteLine($"Submission failed: {errorMessage}");
        }
    }
}